---
layout: doc-ogonek
title: Validation
---

When errors are found encoding or decoding streams, there are various ways of
dealing with the errors. Ogonek provides four different error-handling
strategies. Functions that take a validation strategy argument can also be
called without the strategy argument; when that happens
`ogonek::throw_validation_error` is the default used.

All validation strategies are in the header `<ogonek/validation.h++>`.

---

#### throw\_validation\_error

This strategy throws a `ogonek::validation_error` whenever invalid data is
found.

---

#### discard\_errors

This strategy discards any invalid data and proceeds as if it was not present in
the stream.

---

#### use\_replacement\_character

This strategy replaces invalid data with a replacement character. If the
encoding of the output stream supports it, the Unicode replacement character
U+FFFD
&#640;&#7431;&#7448;&#671;&#7424;&#7428;&#7431;&#7437;&#7431;&#628;&#7451;
&#7428;&#668;&#7424;&#640;&#7424;&#7428;&#7451;&#7431;&#640;. is used. Otherwise
an encoding specific character (given by the encoding
`replacement_character` member, often `?`) is used.

---

#### skip\_validation

This strategy assumes the stream is valid and performs no validation. This is
useful when the stream is known to be good, for example, if it was validated
previously, or generated by a process that cannot generate invalid data. If used
on a stream with invalid data, the behaviour is undefined.

---

### See Also

- [Encoding forms]
- [Encoding schemes]

 [Encoding schemes]: encoding_scheme.html
 [Encoding forms]: encoding_form.html

